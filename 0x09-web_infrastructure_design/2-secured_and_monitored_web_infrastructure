
   THE SERVER WEB INFRASTRUCTURE DESIGNS

                   +-------------------+
                   |  User's Browser   |
                   +-------------------+
                            |
                            v
                  +-------------------+
                  |  DNS (foobar.com) |
                  +-------------------+
                            |
                            v
                 +---------------------+
                 | Firewall #1         |
                 +---------------------+
                            |
                            v
             +--------------------------------+
             |   Load Balancer (HAProxy)      |
             |   SSL Certificate (HTTPS)      |
             |   Monitoring Client #1         |
             +--------------------------------+
                 /                    \
                v                      v
   +---------------------+    +---------------------+
   | Firewall #2         |    | Firewall #3         |
   +---------------------+    +---------------------+
   | Web/App Server 1    |    | Web/App Server 2    |
   | Nginx + Codebase    |    | Nginx + Codebase    |
   | Monitoring Client #2|    | Monitoring Client #3|
   +---------------------+    +---------------------+
            |                          |
            v                          v
         +-------------------------------------+
         |     MySQL Database Cluster          |
         |   Primary (writes) - Replica (reads)|
         +-------------------------------------+



Additional Elements & Why We Add Them
1. Firewalls (3)
•	Why:
Firewalls control what network traffic can enter or leave a server, protecting it from malicious access.
•	Placement:
o	Firewall #1: Protects the load balancer.
o	Firewall #2: Protects Web/App Server 1.
o	Firewall #3: Protects Web/App Server 2.
________________________________________
2. SSL Certificate (HTTPS)
•	Why:
Encrypts all data between the user’s browser and the server so attackers cannot read sensitive information.
•	How:
Installed on the load balancer so all incoming traffic is over HTTPS.
________________________________________
3. Monitoring Clients (3)
•	Why:
Collects performance and health data from each server so issues can be detected early.
•	Placement:
o	One on the load balancer.
o	One on each web/app server.
•	Example Tools: Sumologic, Datadog, Prometheus.
________________________________________
Core Concepts Explaination
What Firewalls Are For
They act like bouncers at a club only letting in specific types of traffic (e.g., HTTP/HTTPS to the web server, MySQL connections from allowed hosts).
________________________________________

Why Serve Traffic Over HTTPS
•	Prevents eavesdropping and data tampering.
•	Protects sensitive user info like passwords and payment data.
________________________________________
What Monitoring Is Used For
•	To track uptime, errors, traffic, and resource usage.
•	Detects problems before they impact users.
________________________________________
How Monitoring Tools Collect Data
•	Agents/clients installed on each server gather logs, metrics, and traces.
•	Send the data to a central service (Sumologic, Datadog, etc.) for analysis and alerts.
________________________________________
If You Want to Monitor QPS (Queries Per Second)
•	Configure the monitoring agent to track the number of HTTP requests processed by Nginx.
•	This data is then sent to the monitoring dashboard where you can view QPS in real-time.
________________________________________
Issues With This Infrastructure
1.	Terminating SSL at the Load Balancer Level
o	Traffic between the load balancer and backend servers is unencrypted — vulnerable to interception if the internal network is compromised.
2.	Only One MySQL Server Accepting Writes
o	The Primary database is a Single Point of Failure for writes — if it fails, you cannot update data.
3.	Servers Have All the Same Components
o	If all servers run the same services, a vulnerability in one service could compromise every server.
o	Increases attack surface and may waste resources.


